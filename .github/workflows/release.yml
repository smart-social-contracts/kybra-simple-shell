name: Publish Package to PyPI

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Type of release (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      create_github_release:
        description: 'Create GitHub Release'
        required: true
        default: true
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine setuptools wheel bump2version pytest
        pip install -e .
        # Show environment information for debugging
        echo "Python version:"
        python --version
        echo "\nInstalled packages:"
        pip list
    
    - name: Run tests before release
      run: |
        if [ -d "tests" ] && [ -f "tests/run_test_ic.sh" ]; then
          echo "Running IC tests..."
          cd tests
          chmod +x run_test_ic.sh
          ./run_test_ic.sh || echo "IC tests skipped when running locally with act"
          cd ..
        else
          echo "Tests directory or run_test_ic.sh not found"
          echo "Current directory contents:"
          ls -la
        fi
        
        # Run unit tests if available
        if [ -d "kybra_simple_shell/tests/" ]; then
          pytest kybra_simple_shell/tests/
        fi
    
    - name: Bump version
      id: bump_version
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        bump2version ${{ github.event.inputs.release_type }}
        echo "NEW_VERSION=$(grep -Po '(?<=version=")[^"]*' setup.py)" >> $GITHUB_OUTPUT
    
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m build
        twine upload dist/*
    
    - name: Push changes
      run: |
        git push origin
        git push origin --tags
    
    - name: Create Release
      if: ${{ github.event.inputs.create_github_release == 'true' }}
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.bump_version.outputs.NEW_VERSION }}
        name: Release v${{ steps.bump_version.outputs.NEW_VERSION }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
